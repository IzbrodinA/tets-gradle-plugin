import java.util.regex.Matcher

plugins {
    id 'java'
    id 'net.researchgate.release' version '3.0.2'

}

group 'com.griddynamics.release'
version = "${project.version}"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

release {
    tagTemplate = (getCurrentGitBranch().startsWith("RC") ? "RC" : "hotfix") + "/" + version
    versionPropertyFile = 'gradle.properties'
    newVersionCommitMessage = 'New version commit: '
    failOnCommitNeeded = true
    failOnUnversionedFiles = true
    failOnSnapshotDependencies = true

    git {
        requireBranch.set('')
        pushToRemote.set('origin')
        commitVersionFileOnly.set(false)
    }
}

def getCurrentGitBranch() {
    def gitBranch = "Unknown branch"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            gitBranch = result.text.trim()
        }
    } catch (ignored) {
    }
    return gitBranch
}